<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd">

	<context:component-scan base-package="com.springbook.biz"></context:component-scan>
	<aop:aspectj-autoproxy></aop:aspectj-autoproxy>
	<context:property-placeholder location="classpath:config/database.properties" />	
	
	<!-- DataSource 설정 -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<property name="driverClassName" value="${jdbc.driver}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}"/>
	</bean>
	
	<!-- Spring JDBC 설정 -->
	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource" ref="dataSource"></property>
	</bean>
	
	<!-- Transaction 설정 -->
	<bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"></property>
	</bean>
	
	<tx:advice id="txAdvice" transaction-manager="txManager">
		<tx:attributes>
			<tx:method name="get*" read-only="true" />
			<tx:method name="*" />
		</tx:attributes>
	</tx:advice>
	
	<aop:config>
		<aop:pointcut id="txPointcut" expression="execution(* com.springbook.biz..*(..))" />
		<aop:advisor pointcut-ref="txPointcut" advice-ref="txAdvice" />
	</aop:config>
	
	<bean id="sqlSession" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation" value="classpath:sql-map-config.xml" />
	</bean>
	
	<bean class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg ref="sqlSession"></constructor-arg>
	</bean>
	
	
<!-- 	<bean id="log" class="com.springbook.biz.common.LogAdvice"></bean> -->
<!-- 	<bean id="before" class="com.springbook.biz.common.BeforeAdvice"></bean> -->
<!-- 	<bean id="afterReturning" class="com.springbook.biz.common.AfterReturningAdvice"></bean> -->
<!-- 	<bean id="afterThrowing" class="com.springbook.biz.common.AfterThrowingAdvice"></bean> -->
<!-- 	<bean id="after" class="com.springbook.biz.common.AfterAdvice"></bean> -->
<!-- 	<bean id="around" class="com.springbook.biz.common.AroundAdvice"></bean> -->
	
<!-- <bean id="txManager" class="org.springframework.orm.jpa.JpaTransactionManager"> -->
<!-- 	<property name="entityManagerFactor" ref="entityManagerFactory"></property> -->
<!-- </bean> -->
	
<!-- 	<aop:config> -->
<!-- 		<aop:pointcut id="allPointcut" expression="execution(* com.springbook.biz..*Impl.*(..))" /> -->
<!-- 		<aop:pointcut id="getPointcut" expression="execution(* com.springbook.biz..*Impl.get*(..))" /> -->
<!-- 		<aop:aspect ref="around"> -->
<!-- 			<aop:around pointcut-ref="allPointcut" method="aroundLog" /> -->
<!-- 		</aop:aspect> -->
<!-- 	</aop:config> -->
	

<!-- 	<bean id="userService" class="com.springbook.biz.user.impl.UserServiceImpl" > -->
<!-- 		<property name="userDAO" ref="userDAO"></property> -->
<!-- 	</bean> -->
	
<!-- 	<bean id="userDAO" class="com.springbook.biz.user.impl.UserDAO"></bean> -->
	
<!-- 	<bean id="tv" class="polymorphism.SamsungTV" p:speaker-ref="sony" p:price="2000"> -->
<!-- 		<constructor-arg index="0" ref="apple"></constructor-arg> -->
<!-- 		<constructor-arg index="1" value="270000"></constructor-arg> -->
<!-- 		<property name="speaker" ref="apple"></property> -->
<!-- 		<property name="price" value="2700"></property> -->
<!-- 	</bean> -->
	
<!-- 	<bean id="sony" class="polymorphism.SonySpeaker"></bean> -->
<!-- 	<bean id="apple" class="polymorphism.AppleSpeaker"></bean> -->
	
<!-- 	<bean id="collectionBean" class="com.springbook.ioc.injection.CollectionBean"> -->
<!-- 		<property name="addressList"> -->
<!-- 			<list> -->
<!-- 				<value>서울시 강남구 역삼동</value> -->
<!-- 				<value>서울시 성동구 행당동</value> -->
<!-- 			</list> -->
<!-- 		</property> -->
<!-- 	</bean> -->
	
</beans>
